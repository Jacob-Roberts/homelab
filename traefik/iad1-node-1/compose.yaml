---
name: traefik

networks:
  frontend:
    external: true
  internal:
    external: false

services:
  traefik-external:
    image: traefik:v3
    container_name: traefik-external
    user: 1002:1002
    security_opt:
      - no-new-privileges:true
    depends_on:
      crowdsec:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - 10.0.0.13:80:80
      - 10.0.0.13:443:443
    environment:
      CROWDSEC_TRAEFIK_BOUNCER_TOKEN: "${CROWDSEC_TRAEFIK_BOUNCER_TOKEN}"
    networks:
      - frontend
      - internal
    volumes:
      - ./config-external/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./config-external/conf/:/etc/traefik/conf/:ro
      - ./config-external/certs/acme.json:/etc/traefik/certs/acme.json:rw
      - ./config-external/static-certs/:/etc/traefik/static-certs/:ro
      - ./config-external/logs:/var/log/traefik
      - ./config-external/plugins-storage:/plugins-storage/:rw
      - ./config-external/ban.html:/etc/traefik/ban.html:ro
      - ./config-external/captcha.html:/etc/traefik/captcha.html:ro
    labels:
      # Management only exposed internally
      traefik.enable: true
      traefik.docker.network: frontend
      traefik.http.services.traefikexternal-prod-1.loadBalancer.server.port: 8080
      traefik.http.routers.traefikexternal-prod-1-http.entrypoints: web
      traefik.http.routers.traefikexternal-prod-1-http.rule: Host(`traefik-external.iad1vpn.jakerob.pro`)
      traefik.http.routers.traefikexternal-prod-1-http.middlewares: "websecure-redirect-permanent@file"
      traefik.http.routers.traefikexternal-prod-1-https.entrypoints: websecure
      traefik.http.routers.traefikexternal-prod-1-https.rule: Host(`traefik-external.iad1vpn.jakerob.pro`)
      traefik.http.routers.traefikexternal-prod-1-https.tls: true
      traefik.http.routers.traefikexternal-prod-1-https.tls.certresolver: cloudflare

  traefik-internal:
    image: traefik:v3
    container_name: traefik-internal
    user: 1002:1002
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

    ports:
      # Bind on secure IP (local, VPN) only
      - 100.109.65.68:80:80
      - 100.109.65.68:443:443
    environment:
      CF_DNS_API_TOKEN: "${CF_DNS_API_TOKEN}"
    networks:
      - frontend
      - internal
    volumes:
      - ./config-internal/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./config-internal/conf/:/etc/traefik/conf/
      - ./config-internal/certs/:/etc/traefik/certs/
    labels:
      # Management only exposed internally
      traefik.enable: true
      traefik.docker.network: frontend
      traefik.http.services.traefikinternal-prod-1.loadBalancer.server.port: 8080
      traefik.http.routers.traefikinternal-prod-1-http.entrypoints: web
      traefik.http.routers.traefikinternal-prod-1-http.rule: Host(`traefik-internal.iad1vpn.jakerob.pro`)
      traefik.http.routers.traefikinternal-prod-1-http.middlewares: "websecure-redirect-permanent@file"
      traefik.http.routers.traefikinternal-prod-1-https.entrypoints: websecure
      traefik.http.routers.traefikinternal-prod-1-https.rule: Host(`traefik-internal.iad1vpn.jakerob.pro`)
      traefik.http.routers.traefikinternal-prod-1-https.tls: true
      traefik.http.routers.traefikinternal-prod-1-https.tls.certresolver: cloudflare
  crowdsec:
    image: crowdsecurity/crowdsec:latest
    container_name: crowdsec
    command: "-t"
    restart: unless-stopped
    environment:
      COLLECTIONS: crowdsecurity/traefik crowdsecurity/http-cve crowdsecurity/base-http-scenarios crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules
      CUSTOM_HOSTNAME: crowdsec
      ENROLL_INSTANCE_NAME: pangolin-crowdsec
      ENROLL_TAGS: docker
      GID: '1002'
      PARSERS: crowdsecurity/whitelists
    networks:
      - internal
    volumes:
      - ./config-crowdsec:/etc/crowdsec
      - ./crowdsec-db/:/var/lib/crowdsec/data
      - ./config-external/logs:/var/log/traefik

    healthcheck:
      interval: 10s
      retries: 15
      test:
        - CMD
        - cscli
        - capi
        - status
      timeout: 10s
    labels:
      - traefik.enable=false
  socket-proxy:
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: traefik-socket-proxy
    read_only: true
    restart: unless-stopped
    environment:
      - ALLOW_START=0 #optional
      - ALLOW_STOP=0 #optional
      - ALLOW_RESTARTS=0 #optional
      - AUTH=0 #optional
      - BUILD=0 #optional
      - COMMIT=0 #optional
      - CONFIGS=0 #optional
      - CONTAINERS=1 #optional
      - DISABLE_IPV6=0 #optional
      - DISTRIBUTION=0 #optional
      - EVENTS=1 #optional
      - EXEC=0 #optional
      - IMAGES=0 #optional
      - INFO=0 #optional
      - NETWORKS=1 #optional
      - NODES=0 #optional
      - PING=1 #optional
      - POST=0 #optional
      - PLUGINS=0 #optional
      - SECRETS=0 #optional
      - SERVICES=1 #optional
      - SESSION=0 #optional
      - SWARM=0 #optional
      - SYSTEM=0 #optional
      - TASKS=1 #optional
      - VERSION=1 #optional
      - VOLUMES=0 #optional
    networks:
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    tmpfs:
      - /run

  whoami-external:
    image: traefik/whoami
    container_name: whoami-external
    command: "--verbose"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      - frontend
    labels:
      traefik.enable: true
      traefik.external: true
      traefik.http.routers.whoamiexternal-prod-1-http.entrypoints: web
      traefik.http.routers.whoamiexternal-prod-1-http.rule: Host(`whoami.iad1.jakerob.pro`)
      traefik.http.routers.whoamiexternal-prod-1-https.entrypoints: websecure
      traefik.http.routers.whoamiexternal-prod-1-https.rule: Host(`whoami.iad1.jakerob.pro`)
      traefik.http.routers.whoamiexternal-prod-1-https.tls: true
      traefik.http.routers.whoamiexternal-prod-1-https.tls.certresolver: production

  whoami-internal:
    image: traefik/whoami
    container_name: whoami-internal
    command: "--verbose"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks:
      - frontend
    labels:
      traefik.enable: true
      traefik.http.routers.whoamiinternal-prod-1-http.entrypoints: web
      traefik.http.routers.whoamiinternal-prod-1-http.rule: Host(`whoami.iad1vpn.jakerob.pro`)
      traefik.http.routers.whoamiinternal-prod-1-https.entrypoints: websecure
      traefik.http.routers.whoamiinternal-prod-1-https.rule: Host(`whoami.iad1vpn.jakerob.pro`)
      traefik.http.routers.whoamiinternal-prod-1-https.tls: true
      traefik.http.routers.whoamiinternal-prod-1-https.tls.certresolver: cloudflare
