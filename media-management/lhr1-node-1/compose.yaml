---
name: media-management

networks:
  frontend:
    external: true
  internal:
    external: false

services:
  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:5.11.0
    restart: unless-stopped
    logging:
      driver: json-file
    security_opt:
      - no-new-privileges:true
    networks:
      - frontend
      - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./radarr-config:/config
      - /media/jellydata:/jellydata
    labels:
      traefik.enable: true
      traefik.docker.network: frontend
      traefik.http.routers.radarr-prod-1-http.entrypoints: web
      traefik.http.routers.radarr-prod-1-http.rule: Host(`radarr.lhr1.jakerob.pro`)
      traefik.http.routers.radarr-prod-1-http.middlewares: websecure-redirect-permanent@file
      traefik.http.routers.radarr-prod-1-https.entrypoints: websecure
      traefik.http.routers.radarr-prod-1-https.rule: Host(`radarr.lhr1.jakerob.pro`)
      traefik.http.routers.radarr-prod-1-https.tls: true
      traefik.http.routers.radarr-prod-1-https.tls.certresolver: cloudflare

  sonarr:
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:4.0.9
    restart: unless-stopped
    logging:
      driver: json-file
    security_opt:
      - no-new-privileges:true
    networks:
      - frontend
      - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./sonarr-config:/config
      - /media/jellydata:/jellydata
    labels:
      traefik.enable: true
      traefik.docker.network: frontend
      traefik.http.routers.sonarr-prod-1-http.entrypoints: web
      traefik.http.routers.sonarr-prod-1-http.rule: Host(`sonarr.lhr1.jakerob.pro`)
      traefik.http.routers.sonarr-prod-1-http.middlewares: websecure-redirect-permanent@file
      traefik.http.routers.sonarr-prod-1-https.entrypoints: websecure
      traefik.http.routers.sonarr-prod-1-https.rule: Host(`sonarr.lhr1.jakerob.pro`)
      traefik.http.routers.sonarr-prod-1-https.tls: true
      traefik.http.routers.sonarr-prod-1-https.tls.certresolver: cloudflare

  bazarr:
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:1.4.5
    restart: unless-stopped
    logging:
      driver: json-file
    security_opt:
      - no-new-privileges:true
    networks:
      - frontend
      - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./bazarr-config:/config
      - /media/jellydata/media:/jellydata/media
    labels:
      traefik.enable: true
      traefik.docker.network: frontend
      traefik.http.routers.bazarr-prod-1-http.entrypoints: web
      traefik.http.routers.bazarr-prod-1-http.rule: Host(`bazarr.lhr1.jakerob.pro`)
      traefik.http.routers.bazarr-prod-1-http.middlewares: websecure-redirect-permanent@file
      traefik.http.routers.bazarr-prod-1-https.entrypoints: websecure
      traefik.http.routers.bazarr-prod-1-https.rule: Host(`bazarr.lhr1.jakerob.pro`)
      traefik.http.routers.bazarr-prod-1-https.tls: true
      traefik.http.routers.bazarr-prod-1-https.tls.certresolver: cloudflare

  prowlarr:
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:1.24.3
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./prowlarr-config:/config
    security_opt:
      - no-new-privileges:true
    networks:
      - frontend
      - internal
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    labels:
      traefik.enable: true
      traefik.docker.network: frontend
      traefik.http.routers.prowlarr-prod-1-http.entrypoints: web
      traefik.http.routers.prowlarr-prod-1-http.rule: Host(`prowlarr.lhr1.jakerob.pro`)
      traefik.http.routers.prowlarr-prod-1-http.middlewares: websecure-redirect-permanent@file
      traefik.http.routers.prowlarr-prod-1-https.entrypoints: websecure
      traefik.http.routers.prowlarr-prod-1-https.rule: Host(`prowlarr.lhr1.jakerob.pro`)
      traefik.http.routers.prowlarr-prod-1-https.tls: true
      traefik.http.routers.prowlarr-prod-1-https.tls.certresolver: cloudflare

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:v3.3.21
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/London
    networks:
      - internal
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  gluetun:
    image: docker.io/qmcgaw/gluetun:v3
    container_name: gluetun
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - "8888:8888/tcp" # Gluetun Local Network HTTP proxy
      - "8388:8388/tcp" # Gluetun Local Network Shadowsocks
      - "8388:8388/udp" # Gluetun Local Network Shadowsocks
      - "8000:8000"     # Gluetun control server
      - "6881:6881/tcp" # qBittorrent Torrent Port TCP
      - "6881:6881/udp" # qBittorrent Torrent Port UDP
    volumes:
      - ./gluetun-config:/gluetun
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
      - frontend
    environment:
      - TZ=Europe/London
      - VPN_SERVICE_PROVIDER=protonvpn
      - OPENVPN_USER=${OPENVPN_USER}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - FREE_ONLY=on
      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      - UPDATER_PERIOD=24h
    labels:
      traefik.enable: true
      traefik.docker.network: frontend
      traefik.http.services.qbittorrent-prod-1.loadBalancer.server.port: 8080
      traefik.http.routers.qbittorrent-prod-1-http.entrypoints: web
      traefik.http.routers.qbittorrent-prod-1-http.rule: Host(`qbittorrent.lhr1.jakerob.pro`)
      traefik.http.routers.qbittorrent-prod-1-http.middlewares: websecure-redirect-permanent@file
      traefik.http.routers.qbittorrent-prod-1-https.entrypoints: websecure
      traefik.http.routers.qbittorrent-prod-1-https.rule: Host(`qbittorrent.lhr1.jakerob.pro`)
      traefik.http.routers.qbittorrent-prod-1-https.tls: true
      traefik.http.routers.qbittorrent-prod-1-https.tls.certresolver: cloudflare

  # sabnzbd:
  #   container_name: sabnzbd
  #   image: lscr.io/linuxserver/sabnzbd:4.3.1
  #   restart: unless-stopped
  #   logging:
  #     driver: json-file
  #   ports:
  #     # - 8080:8080
  #     - 9090:9090
  #   networks:
  #     - internal
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/London
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ./sabnzbd-config:/config
  #     - /media/jellydata/usenet:/jellydata/usenet:rw

  # debug:
  #   image: jonlabelle/network-tools
  #   container_name: debug
  #   stdin_open: true
  #   tty: true
  #   network_mode: "service:gluetun"

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:5.0.0
    container_name: qbittorrent
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - WEBUI_PORT=8080
    volumes:
      - ./qbittorrent-config:/config
      - /media/jellydata/torrents:/jellydata/torrents:rw
    ## Do Not Change Network for qBittorrent
    ## qBittorrent MUST always use a VPN / Secure Internet connection
    network_mode: "service:gluetun"

  syncthing:
    image: lscr.io/linuxserver/syncthing:1.27.12
    container_name: syncthing
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./syncthing-config:/config
      - /media/jellydata:/jellydata
    ports:
      - 22000:22000/tcp # TCP file transfers
      - 22000:22000/udp # QUIC file transfers
    restart: unless-stopped
    networks:
      - frontend
    labels:
      traefik.enable: true
      traefik.docker.network: frontend
      traefik.http.services.syncthing-prod-1.loadbalancer.server.port: "8384"
      traefik.http.routers.syncthing-prod-1-http.entrypoints: web
      traefik.http.routers.syncthing-prod-1-http.rule: Host(`syncthing.lhr1.jakerob.pro`)
      traefik.http.routers.syncthing-prod-1-http.middlewares: websecure-redirect-permanent@file
      traefik.http.routers.syncthing-prod-1-https.entrypoints: websecure
      traefik.http.routers.syncthing-prod-1-https.rule: Host(`syncthing.lhr1.jakerob.pro`)
      traefik.http.routers.syncthing-prod-1-https.tls: true
      traefik.http.routers.syncthing-prod-1-https.tls.certresolver: cloudflare
