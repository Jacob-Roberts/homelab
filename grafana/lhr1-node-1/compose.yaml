---
name: grafana

networks:
  frontend:
    external: true

services:
  grafana:
    image: docker.io/grafana/grafana-oss:11.1.3
    container_name: grafana
    user: 1000:1000
    restart: unless-stopped
    environment:
      GF_SERVER_ROOT_URL: https://grafana.lhr1.jakerob.pro
      GF_AUTH_GENERIC_OAUTH_ENABLED: true
      GF_AUTH_GENERIC_OAUTH_NAME: authentik
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "${GF_AUTH_GENERIC_OAUTH_CLIENT_ID}"
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "${GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET}"
      GF_AUTH_GENERIC_OAUTH_SCOPES: openid profile email
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://authentik.lhr1.jakerob.pro/application/o/authorize/
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://authentik.lhr1.jakerob.pro/application/o/token/
      GF_AUTH_GENERIC_OAUTH_API_URL: https://authentik.lhr1.jakerob.pro/application/o/userinfo/
      GF_AUTH_SIGNOUT_REDIRECT_URL: https://authentik.lhr1.jakerob.pro/application/o/grafana/end-session/
      # Optionally enable auto-login (bypasses Grafana login screen)
      GF_AUTH_OAUTH_AUTO_LOGIN: true
      # Optionally map user groups to Grafana roles
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'"
    networks:
      - frontend
    volumes:
      - ./data:/var/lib/grafana
    labels:
      traefik.enable: true
      traefik.http.routers.grafana-prod-1-http.entrypoints: web
      traefik.http.routers.grafana-prod-1-http.rule: Host(`grafana.lhr1.jakerob.pro`)
      traefik.http.routers.grafana-prod-1-https.entrypoints: websecure
      traefik.http.routers.grafana-prod-1-https.rule: Host(`grafana.lhr1.jakerob.pro`)
      traefik.http.routers.grafana-prod-1-https.tls: true
      traefik.http.routers.grafana-prod-1-https.tls.certresolver: cloudflare
