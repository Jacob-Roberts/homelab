---
name: immich

networks:
  frontend:
    external: true
  internal:
    external: false

services:
  immich-server:
    container_name: immich-server
    image: ghcr.io/immich-app/immich-server:v1.103.1
    command: ["start.sh", "immich"]
    volumes:
      - /nfs/immich:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    user: 1000:1000
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USERNAME=${DB_USERNAME}
      - DB_HOSTNAME=database
      - DB_DATABASE_NAME=${DB_DATABASE_NAME}
      - REDIS_HOSTNAME=cache
    depends_on:
      - cache
      - database
    networks:
      - frontend
      - internal
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      traefik.enable: true
      traefik.docker.network: frontend
      traefik.http.routers.immich-prod-1-http.entrypoints: web
      traefik.http.routers.immich-prod-1-http.rule: Host(`immich.slc1.jakerob.pro`)
      traefik.http.routers.immich-prod-1-http.middlewares: websecure-redirect-permanent@file
      traefik.http.routers.immich-prod-1-https.entrypoints: websecure
      traefik.http.routers.immich-prod-1-https.rule: Host(`immich.slc1.jakerob.pro`)
      traefik.http.routers.immich-prod-1-https.tls: true
      traefik.http.routers.immich-prod-1-https.tls.certresolver: cloudflare

  immich-worker:
    container_name: immich-worker
    image: ghcr.io/immich-app/immich-server:v1.103.1
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/hardware-transcoding
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    command: ["start.sh", "microservices"]
    volumes:
      - /nfs/immich:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    user: 1000:1000
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USERNAME=${DB_USERNAME}
      - DB_HOSTNAME=database
      - DB_DATABASE_NAME=${DB_DATABASE_NAME}
      - REDIS_HOSTNAME=cache
    networks:
      - internal
    depends_on:
      - cache
      - database
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  immich-machine-learning:
    container_name: immich-machine-learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:v1.103.1
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - ./model-cache:/cache
    networks:
      - internal
    user: 1000:1000
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_USERNAME=${DB_USERNAME}
      - DB_HOSTNAME=database
      - DB_DATABASE_NAME=${DB_DATABASE_NAME}
      - REDIS_HOSTNAME=cache
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  cache:
    container_name: immich-cache
    image: registry.hub.docker.com/library/redis:6.2-alpine
    restart: unless-stopped
    networks:
      - internal

  database:
    container_name: immich-database
    image: registry.hub.docker.com/tensorchord/pgvecto-rs:pg14-v0.2.0
    user: 1000:1000
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_DB=${DB_DATABASE_NAME}
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      - internal
    restart: unless-stopped
